name: 'Generate Markdown Reports'
description: 'Generates collapsed markdown reports for platform updates, UI dependencies, and missing UI modules'
author: 'FOLIO DevOps'

inputs:
  updated:
    description: 'Whether updates were detected (true/false)'
    required: true
  failure_reason:
    description: 'Failure reason if no updates detected'
    required: false
    default: ''
  descriptor_markdown:
    description: 'Markdown content from platform descriptor diff report'
    required: false
    default: ''
  ui_updates_markdown:
    description: 'Markdown content from package diff report'
    required: false
    default: ''
  not_found_ui_report:
    description: 'JSON object with missing UI modules (module name -> version)'
    required: false
    default: '{}'
  package_diff_available:
    description: 'Whether package diff report is available (true/false)'
    required: false
    default: 'false'
  write_to_summary:
    description: 'Whether to write reports to GitHub step summary'
    required: false
    default: 'true'

outputs:
  updates_markdown:
    description: 'Formatted markdown for application & component updates'
    value: ${{ steps.generate.outputs.updates_markdown }}
  ui_updates_markdown:
    description: 'Formatted markdown for UI dependency updates'
    value: ${{ steps.generate.outputs.ui_updates_markdown }}
  missing_ui_markdown:
    description: 'Formatted markdown for missing UI dependencies'
    value: ${{ steps.generate.outputs.missing_ui_markdown }}

runs:
  using: 'composite'
  steps:
    - name: 'Generate markdown reports'
      id: generate
      shell: bash
      env:
        UPDATED: ${{ inputs.updated }}
        FAILURE_REASON: ${{ inputs.failure_reason }}
        DESCRIPTOR_MARKDOWN: ${{ inputs.descriptor_markdown }}
        UI_UPDATES_MARKDOWN: ${{ inputs.ui_updates_markdown }}
        NOT_FOUND_UI_REPORT: ${{ inputs.not_found_ui_report }}
        PACKAGE_DIFF_AVAILABLE: ${{ inputs.package_diff_available }}
        WRITE_TO_SUMMARY: ${{ inputs.write_to_summary }}
      run: |
        set -euo pipefail
        IFS=$'\n\t'

        render_missing_table() {
          local json="$1"
          if [ -z "${json:-}" ] || [ "$json" = "{}" ]; then
            echo ''
            return 0
          fi
          local count
          if ! count=$(jq 'length' <<< "$json" 2>/dev/null); then
            echo ''
            return 0
          fi
          if [ "$count" -eq 0 ]; then
            echo ''
            return 0
          fi
          echo '| Module | Referenced Version |'
          echo '| ------ | ------------------ |'
          jq -r 'to_entries[] | "| \(.key) | \(.value) |"' <<< "$json"
        }

        # Use descriptor markdown from the action
        if [ "$UPDATED" != 'true' ]; then
          reason='No updates detected.'
          [ -n "${FAILURE_REASON:-}" ] && reason="$FAILURE_REASON"
          descriptor_markdown=$'### Application & Component Updates\n\n'"$reason"
          ui_updates_markdown=$'### UI Dependency Updates\n\nNo UI dependencies were updated.'
          missing_ui_markdown=$'### Missing UI Dependencies\n\nNo missing UI dependencies detected.'
        else
          # Use the markdown generated by the action
          descriptor_markdown="${DESCRIPTOR_MARKDOWN}"

          # Use UI updates markdown from the action (if available)
          if [ "${PACKAGE_DIFF_AVAILABLE}" = "true" ]; then
            ui_updates_markdown="${UI_UPDATES_MARKDOWN}"
          else
            # Fallback if package diff was not generated
            ui_updates_markdown=$'### UI Dependency Updates\n\n_No package.json comparison available._'
          fi

          # Build missing UI table
          missing_table=$(render_missing_table "${NOT_FOUND_UI_REPORT}")
          if [ -z "$missing_table" ]; then
            missing_ui_markdown=$'### Missing UI Dependencies\n\nNo missing UI dependencies detected.'
          else
            missing_cnt=$(jq 'length' <<< "${NOT_FOUND_UI_REPORT}" || echo 0)
            missing_ui_markdown=$(cat <<EOF
        ### Missing UI Dependencies

        **Missing entries:** ${missing_cnt}

        ${missing_table}

        > These UI modules are referenced by application descriptors but were NOT found in \`package.json\`.
        EOF
            )
          fi
        fi

        {
          echo 'updates_markdown<<EOF'
          echo "$descriptor_markdown"
          echo 'EOF'
        } >> "$GITHUB_OUTPUT"
        {
          echo 'ui_updates_markdown<<EOF'
          echo "$ui_updates_markdown"
          echo 'EOF'
        } >> "$GITHUB_OUTPUT"
        {
          echo 'missing_ui_markdown<<EOF'
          echo "$missing_ui_markdown"
          echo 'EOF'
        } >> "$GITHUB_OUTPUT"

        if [[ -n "${GITHUB_STEP_SUMMARY:-}" ]] && [[ "${WRITE_TO_SUMMARY}" == "true" ]]; then
          {
            echo "$descriptor_markdown"
            echo ''
            echo "$ui_updates_markdown"
            echo ''
            echo "$missing_ui_markdown"
          } >> "$GITHUB_STEP_SUMMARY"
        fi

