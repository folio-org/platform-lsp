name: 'FOLIO Release Artifact Creator'
description: 'Automatically packages and uploads complete platform release artifacts'
author: 'FOLIO'

inputs:
  release_tag:
    description: 'Release tag to create artifacts for'
    required: true
  github_token:
    description: 'GitHub token for uploading artifacts'
    required: true
  config_path:
    description: 'Path to release configuration file'
    required: false
    default: '.github/release-config.yml'
  descriptor_path:
    description: 'Path to platform descriptor file'
    required: false
    default: 'platform-descriptor.json'
  far_url:
    description: 'Base URL for FAR API'
    required: false
    default: 'https://far.ci.folio.org'

outputs:
  archive_path:
    description: 'Path to the created archive'
    value: ${{ steps.create-archive.outputs.archive_path }}
  archive_size:
    description: 'Size of the created archive in bytes'
    value: ${{ steps.create-archive.outputs.archive_size }}
  sha256_checksum:
    description: 'SHA256 checksum of the archive'
    value: ${{ steps.create-archive.outputs.sha256_checksum }}

runs:
  using: 'composite'
  steps:
    - name: Validate required files
      shell: bash
      run: |
        echo "::group::Validating required files"
        ${{ github.action_path }}/validate-files.sh "${{ inputs.config_path }}"
        echo "::endgroup::"

    - name: Collect application descriptors
      shell: bash
      run: |
        echo "::group::Collecting application descriptors from FAR"
        # Run Python script to collect descriptors based on platform-descriptor.json
        python3 "${{ github.action_path }}/collect_descriptors.py" \
          "${{ inputs.descriptor_path }}" \
          "${{ inputs.far_url }}"
        echo "::endgroup::"

    - name: Collect platform files
      shell: bash
      run: |
        echo "::group::Collecting platform files"
        ${{ github.action_path }}/collect-files.sh "${{ inputs.config_path }}"
        echo "::endgroup::"

    - name: Create archive
      id: create-archive
      shell: bash
      run: |
        echo "::group::Creating release archive"
        ${{ github.action_path }}/create-archive.sh \
          "${{ inputs.release_tag }}" \
          "${{ inputs.config_path }}"
        echo "::endgroup::"
